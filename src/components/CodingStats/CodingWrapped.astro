---
import Coding from "./Coding";

const baseURL = import.meta.env.GUAC_URL;
let authHeader: undefined | { Authorization: string };
const login = async () => {
  const username = import.meta.env.GUAC_USER;
  const password = import.meta.env.GUAC_PASS;
  const loginUrl = `${baseURL}/login`;
  const res = await fetch(loginUrl, {
    method: "POST",
    body: JSON.stringify({
      username,
      password,
    }),
  });
  if (res?.status !== 200) {
    console.error(await res.text());
    return;
  }
  const { token } = await res.json();
  return { Authorization: `Bearer ${token}` };
};

const fetchGuac = async (start: string, end: string) => {
  if (!authHeader) {
    authHeader = await login();
  }
  const res = await fetch(`${baseURL}/data?start=${start}&end=${end}`, {
    headers: authHeader,
  });
  if (res?.status !== 200) {
    console.log(await res.text());
    throw new Error("Failed to get data from guac api");
  }
  const data = await res.json();
  return data?.languageStats;
};

const fetchWithMonths = async (months: number) => {
  const today = new Date().toISOString().split("T")[0];
  let before = new Date();
  before.setMonth(before.getMonth() - months);
  const beforeStr = before.toISOString().split("T")[0];
  const languageData = await fetchGuac(beforeStr, today);
  return languageData?.percentages;
};

let dataSet;
try {
  const data = await Promise.all(
    [3, 6, 12].map(async (n) => {
      await new Promise((r) => setTimeout(r, 500));
      return fetchWithMonths(n);
    })
  );
  dataSet = [3, 6, 12].map((n, idx) => ({ months: n, data: data[idx] }));
} catch (err) {
  console.log(err);
}
---

{
  dataSet && (
    <div class="text-center">
      <div class="md:w-96 py-4 bg-base-400 m-4">
        <Coding client:visible dataSet={dataSet} topN={7} />
      </div>
      <small >
        Powered by{" "}
        <a class="badge badge-primary" target="_blank" href="https://wakatime.com/">
          Wakatime
        </a>
        and
        <a class="badge badge-info" href="https://github.com/mtanzim/guac" target="_blank">
          Guac
        </a>
      </small>
    </div>
  )
}
